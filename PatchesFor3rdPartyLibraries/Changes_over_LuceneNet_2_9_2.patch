Index: contrib/Snowball.Net/Snowball.Net/Lucene.Net/Analysis/Snowball/SnowballAnalyzer.cs
===================================================================
--- contrib/Snowball.Net/Snowball.Net/Lucene.Net/Analysis/Snowball/SnowballAnalyzer.cs	(revision 948377)
+++ contrib/Snowball.Net/Snowball.Net/Lucene.Net/Analysis/Snowball/SnowballAnalyzer.cs	(working copy)
@@ -19,6 +19,7 @@
 using Lucene.Net.Analysis;
 using Lucene.Net.Analysis.Standard;
 using SF.Snowball.Ext;
+using System.Collections;
 namespace Lucene.Net.Analysis.Snowball
 {
 	
@@ -45,6 +46,13 @@
 		{
 			stopSet = StopFilter.MakeStopSet(stopWords);
 		}
+
+        /// <summary>Builds the named analyzer with the given stop words. </summary>
+        public SnowballAnalyzer(System.String name, Hashtable stopSet)
+            : this(name)
+        {
+            this.stopSet = stopSet;
+        }
 		
 		/// <summary>Constructs a {@link StandardTokenizer} filtered by a {@link
 		/// StandardFilter}, a {@link LowerCaseFilter} and a {@link StopFilter}. 
Index: src/Lucene.Net/SupportClass.cs
===================================================================
--- src/Lucene.Net/SupportClass.cs	(revision 948377)
+++ src/Lucene.Net/SupportClass.cs	(working copy)
@@ -465,7 +465,6 @@
 		// Disable the obsolete warning since we must use FileStream.Handle
 		// because Mono does not support FileSystem.SafeFileHandle at present.
 #pragma warning disable 618
-
 		/// <summary>
 		/// Flushes the specified file stream. Ensures that all buffered
 		/// data is actually written to the file system.
@@ -477,30 +476,9 @@
 				throw new ArgumentNullException("fileStream");
 
 			fileStream.Flush();
-
-			if (OS.IsWindows)
-			{
-				if (!FlushFileBuffers(fileStream.Handle))
-					throw new System.IO.IOException();
-			}
-			else if (OS.IsUnix)
-			{
-				if (fsync(fileStream.Handle) != IntPtr.Zero)
-				throw new System.IO.IOException();
-			}
-			else
-			{
-				throw new NotImplementedException();
-			}
 		}
-
 #pragma warning restore 618
 
-		[System.Runtime.InteropServices.DllImport("libc")]
-		extern static IntPtr fsync(IntPtr fd);
-
-		[System.Runtime.InteropServices.DllImport("kernel32.dll")]
-		extern static bool FlushFileBuffers(IntPtr hFile);
     }
 
     /// <summary>
